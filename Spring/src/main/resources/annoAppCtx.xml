<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
        http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<context:annotation-config />
	<context:component-scan base-package="com.study.spring.config.annotation"/>
	
	<!-- 
		@Component，@Repository，@Service，@Controller
			标注在类上，生成受spring管理的bean
			这些注解功能相同，只不过后三者具有一定的意 义
	 -->
	<bean id="user" class="com.study.spring.base.domain.User" scope="prototype">
		<property name="name" value="TOM"/>
		<property name="age" value="23"/>
		<property name="married" value="false" />
		<property name="sex" value="M" />
	</bean>
	
	<!-- 
		@Required 
			初始化bean时对bean进行依赖检查，只检查依赖是否设置过，而不论值是什么
			注解只能标注在setter方法上
	 -->
	<bean id="operationLog" class="com.study.spring.config.annotation.required.OperationLog">
		<!-- 如果没有设置required依赖，初始化时即会抛错： org.springframework.beans.factory.BeanInitializationException: Property 'operator' is required for bean 'operationLog'-->
		<property name="operator" ref="user" />
	</bean>
	
	<!-- 
		@Autowired 根据类型自动装配
			required属性用于依赖检查，默认为true，@Autowired (required=true)
			当且仅当有1个依赖匹配时，才能正常运行，否则抛错
			可标注在属性，setter方法以及构造方法上
		@Qualifier
			配合@AutoWired，精确匹配依赖，避免冲突 @Qualifier("user")
			可标注在属性上，setter和构造方法上以及其方法的参数前
	 -->
	 
	 <!-- 
	 	JSR-250 @Resource，同@Autowired，用于装配bean
	 		可标注在类的属性和setter方法上
	 		属性name用于精确匹配依赖(@Resouce(name="..."))，默认情况下注入与name值对应的依赖，如果没有配置name属性，将使用修饰的属性名或setter方法对应的属性名，再者根据类型匹配
	  -->
	  
	  <!-- 
	  	JSR-250 @PostConstruct
	  	JSR-250 @PreDestroy
	   -->
</beans>