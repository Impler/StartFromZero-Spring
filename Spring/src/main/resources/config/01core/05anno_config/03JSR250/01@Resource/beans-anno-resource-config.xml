<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>
    <!-- 
    	@Resource
    		类似@Autowired，用于自动注入依赖。不同的是Autowired默认是按类型匹配，而Resource是按名称匹配
    		name: 指定依赖的名称
    		当标识在类的属性上时，默认查找与该属性相同的bean
    		当标识在setter方法时，默认查找与该方法对应的属性名相同的bean
    		当标识在类上时，没有默认值，必须指定
     -->
    <bean id="foo" class="com.study.spring._01core._05anno_config._03JSR250._01resource.Foo"></bean>
	<bean id="bar" class="com.study.spring._01core._05anno_config._03JSR250._01resource.Bar">
		<property name="name" value="bar" />
	</bean>
	
	<!-- 
		 @Resource装配顺序 
		　 (1). 如果同时指定了name和type，则从Spring上下文中找到唯一匹配的bean进行装配，找不到则抛出异常;
		　 (2). 如果指定了name，则从上下文中查找名称（id）匹配的bean进行装配，找不到则抛出异常;
		　 (3). 如果指定了type，则从上下文中找到类型匹配的唯一bean进行装配，找不到或者找到多个，都会抛出异常;
		　 (4). 如果既没有指定name，又没有指定type，则自动按照byName方式进行装配；如果没有匹配，则回退为一个原始类型进行匹配，如果匹配则自动装配；
	 -->
</beans>