<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation=
		"http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
	   
	   <!-- introduction advisor start -->
	   <!-- TODO -->
	   <!-- introduction advisor end -->
	   
	   <!-- 
	   	自动创建代理 
	   	前面的例子，都是通过ProxyFactoryBean创建织入切面的代理，每一个需要被代理的bean都要使用一个ProxyFactoryBean进行配置，太过繁琐。
	   	Spring使用BeanPostProcessor完成自动创建代理的工作
	   	BeanPostProcessor的三类实现：
	   	BeanNameAutoProxyCreator：基于Bean配置名规则的自动代理创建器
		DefaultAdvisorAutoProxyCreator：基于Advisor匹配机制的自动代理创建器
		AnnotationAwareAspectJAutoProxyCreator：基于Bean中AspjectJ注解标签的自动代理创建器
		
		TODO	   	
	   	-->
</beans>