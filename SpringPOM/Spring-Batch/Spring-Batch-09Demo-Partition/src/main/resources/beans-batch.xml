<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

	<!-- 定义作业调度器 -->
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<!-- 定义作业仓库 -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="isolationLevelForCreate" value="ISOLATION_READ_COMMITTED" />
	</bean>
	<!-- <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"> 
		</bean> -->

	<bean id="jobExplorer"
		class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

<!-- 	<bean
		class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry" />
	</bean> -->

	<bean id="jobOperator"
		class="org.springframework.batch.core.launch.support.SimpleJobOperator">
		<property name="jobRepository" ref="jobRepository" />
		<property name="jobLauncher" ref="jobLauncher" />
		<property name="jobRegistry" ref="jobRegistry" />
		<property name="jobExplorer" ref="jobExplorer" />
	</bean>

	<bean id="dbPartitioner"
		class="com.study.spring.batch.framework.partition.DBPartitioner">
		<property name="userDao" ref="userDao" />
	</bean>

	<batch:job id="userJob" restartable="true">
		<batch:step id="dataDispatcher" next="processData">
			<batch:tasklet>
				<bean
					class="com.study.spring.batch.framework.tasklet.DataDispatcherTasklet" />
			</batch:tasklet>
		</batch:step>
		<batch:step id="processData">
			<partition step="userChunkStep" partitioner="dbPartitioner">
				<handler grid-size="1" task-executor="taskExecutor" />
			</partition>
			<batch:listeners>
				<batch:listener>
					<bean class="com.study.spring.batch.framework.listener.StepTraceListener" />
				</batch:listener>
			</batch:listeners>
		</batch:step>
	</batch:job>

	<batch:step id="userChunkStep">
		<batch:tasklet>
			<batch:chunk reader="pagingReader" processor="processor"
				writer="writer" commit-interval="10" />
		</batch:tasklet>
	</batch:step>

	<bean id="writer"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="sql"
			value="update t_user_validate t set t.deal_flag = 1, t.result_code = ?, t.result_content = ? where id = ?" />
		<property name="dataSource" ref="dataSource" />
		<property name="itemPreparedStatementSetter">
			<bean
				class="com.study.spring.batch.framework.writer.UserItemPreparedStatementSetter" />
		</property>
	</bean>

	<bean id="processor"
		class="com.study.spring.batch.framework.processor.UserProcessor" />

	<bean id="pagingReader"
		class="org.springframework.batch.item.database.JdbcPagingItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="queryProvider" ref="queryProvider" />
		<!--设置动态参数-->
		<property name="parameterValues">
			<map>
				<entry key="startId" value="#{stepExecutionContext[_minRecord]}"></entry>
				<entry key="endId" value="#{stepExecutionContext[_maxRecord]}"></entry>
			</map>
		</property>
		<property name="pageSize" value="10" />
		<property name="rowMapper">
			<bean class="org.springframework.jdbc.core.BeanPropertyRowMapper">
				<property name="mappedClass" value="com.study.spring.batch.domain.User" />
			</bean>
		</property>
	</bean>

	<bean id="queryProvider"
		class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="selectClause" value="select id, name, cert_no " />
		<property name="fromClause" value="from t_user_validate" />
		<!--使用动态参数-->
		<property name="whereClause"
			value="where id between :startId and :endId" />
		<property name="sortKey" value="id" />
	</bean>


	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="6" />
		<property name="maxPoolSize" value="15" />
	</bean>

</beans>